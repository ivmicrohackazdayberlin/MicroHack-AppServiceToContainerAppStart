# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Deploy to Container App

on:
  workflow_dispatch:

permissions:
  id-token: write

jobs:

  build:
    name: Build and test solution
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build with dotnet
      run: dotnet build --no-restore
    - name: Build and Push Image
      run: |
        az acr login --name microhackregistryxyz --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }} &&
        docker build -t microhackregistryxyz.azurecr.io/microhackapp:1 -f Dockerfile . &&
        docker push microhackregistryxyz.azurecr.io/microhackapp:1

    - name: Deploy to Container App
      uses: azure/container-apps-deploy-action@v2
      with:
        imageToDeploy: microhackregistryxyz.azurecr.io/microhackapp:${{ steps.get_tag.outputs.image_tag }}
        acrUsername: ${{ secrets.ACR_USERNAME }}
        acrPassword: ${{ secrets.ACR_PASSWORD }}
        resourceGroup: MicroHack-AppServiceToContainerApp
        containerAppEnvironment: microhack-containerappenvironment
        containerAppName: microhack-containerapp
        targetPort: 8080
